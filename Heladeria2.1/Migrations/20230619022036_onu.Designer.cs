// <auto-generated />
using Heladeria2._1.DatosPerrones;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Heladeria2._1.Migrations
{
    [DbContext(typeof(HeladeriaContext))]
    [Migration("20230619022036_onu")]
    partial class onu
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HeladeriaAPI.Models.Helado", b =>
                {
                    b.Property<int>("IdHelado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHelado"));

                    b.Property<decimal>("CantidadHelado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreHelado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioHelado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdHelado");

                    b.ToTable("Heladoss");

                    b.HasData(
                        new
                        {
                            IdHelado = 1,
                            CantidadHelado = 30.8m,
                            NombreHelado = "Chocolate",
                            PrecioHelado = 43.6m
                        },
                        new
                        {
                            IdHelado = 2,
                            CantidadHelado = 42.6m,
                            NombreHelado = "Fresa",
                            PrecioHelado = 39.99m
                        },
                        new
                        {
                            IdHelado = 3,
                            CantidadHelado = 24.5m,
                            NombreHelado = "Vainilla",
                            PrecioHelado = 38.50m
                        });
                });

            modelBuilder.Entity("HeladeriaAPI.Models.Toppings", b =>
                {
                    b.Property<int>("IdToppings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdToppings"));

                    b.Property<int>("CantidadToppings")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioTopping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Topping")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdToppings");

                    b.ToTable("Toppingss");

                    b.HasData(
                        new
                        {
                            IdToppings = 1,
                            CantidadToppings = 36,
                            PrecioTopping = 13.62m,
                            Topping = "Galletas Oreo"
                        },
                        new
                        {
                            IdToppings = 2,
                            CantidadToppings = 20,
                            PrecioTopping = 3.9m,
                            Topping = "Barquillos de valinilla"
                        },
                        new
                        {
                            IdToppings = 3,
                            CantidadToppings = 25,
                            PrecioTopping = 6.25m,
                            Topping = "Chispitas"
                        },
                        new
                        {
                            IdToppings = 4,
                            CantidadToppings = 14,
                            PrecioTopping = 13.45m,
                            Topping = "Fresitas"
                        });
                });

            modelBuilder.Entity("HeladeriaAPI.Models.Ventas", b =>
                {
                    b.Property<int>("idVentas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idVentas"));

                    b.Property<int>("IdHelado")
                        .HasColumnType("int");

                    b.Property<int>("IdToppings")
                        .HasColumnType("int");

                    b.Property<decimal>("IngresosDeVenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreHelado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("heladoIdHelado")
                        .HasColumnType("int");

                    b.Property<int>("toppingsIdToppings")
                        .HasColumnType("int");

                    b.HasKey("idVentas");

                    b.HasIndex("heladoIdHelado");

                    b.HasIndex("toppingsIdToppings");

                    b.ToTable("Ventass");
                });

            modelBuilder.Entity("HeladeriaAPI.Models.Ventas", b =>
                {
                    b.HasOne("HeladeriaAPI.Models.Helado", "helado")
                        .WithMany()
                        .HasForeignKey("heladoIdHelado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeladeriaAPI.Models.Toppings", "toppings")
                        .WithMany()
                        .HasForeignKey("toppingsIdToppings")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("helado");

                    b.Navigation("toppings");
                });
#pragma warning restore 612, 618
        }
    }
}
